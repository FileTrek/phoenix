#!/usr/bin/groovy
@Library('intersetLib') _

properties([
    parameters([
        string(defaultValue: params.BRANCH_NAME, description: 'Branch of git repo to get jenkinsfile from', name: 'BRANCH_NAME'),
        string(defaultValue: params.BUILD_ENV_LABEL ?: 'ops', description: 'Label for the build environment to use', name: 'BUILD_ENV_LABEL', trim: false),
        string(defaultValue: params.GIT_CREDENTIAL_ID ?: 'git-interset-readonly', description: 'Git credential identified', name: 'GIT_CREDENTIAL_ID', trim: false)
    ])
])

node("${params.BUILD_ENV_LABEL}") {
    stage('Cloning Repo') {
        git branch: params.BRANCH_NAME, credentialsId: params.GIT_CREDENTIAL_ID, url: 'git@github.com:MicroFocus/phoenix.git'
    }

    stage('Building Phoenix Parcel') {
       withCredentials([file(credentialsId: 'm2_settings.xml_password', variable: 'M2_SETTING')]) {
            sh "mkdir -p ~/.m2 && cp -f $M2_SETTING ~/.m2/settings.xml"
            sh "mvn -DskipTests clean package"
            sh '''
                for x in `find $WORKSPACE -name *el?.parcel`; do
                    sha1sum $x | cut -d ' ' -f 1 > $x.sha
                done
                find $WORKSPACE
            '''
       }
    }

    stage('Archiving Artifacts') {
       archiveArtifacts '**/target/*.jar,**/target/*el6.parcel*,**/target/*el7.parcel*,**/manifest.json'
    }
}
